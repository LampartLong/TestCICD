# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      STORE_FILE: ${{ secrets.STORE_FILE }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: '18'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.1'

      - name: Clean
        run: |
          cd ${{ github.workspace }}
          cd ky_project
          flutter clean

      - name: Install dependencies
        run: |
          cd ${{ github.workspace }}
          cd ky_project
          flutter pub get

      - name: Build Android APK
        run: |
          cd ${{ github.workspace }}
          cd ky_project
          flutter build apk --release --dart-define=STORE_FILE=$STORE_FILE --dart-define=KEY_ALIAS=$KEY_ALIAS --dart-define=STORE_PASSWORD=$STORE_PASSWORD --dart-define=KEY_PASSWORD=$KEY_PASSWORD
      - name: Check
        run: ls

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v2
        with:
          name: My-App
          path: ky_project/build/app/outputs/flutter-apk/app-release.apk

      # - name: Download APK Artifact
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: My-App
      #     path: path/to/download/directory
      # - name: Build iOS IPA
      #   run: |
      #     cd ${{ github.workspace }}
      #     cd ky_project
      #     flutter build ipa --release --no-codesign
